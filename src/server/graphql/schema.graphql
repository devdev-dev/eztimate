type Query {
    validateIssue(id: ID!): Issue

    getActiveIssue: Issue
    getActiveUser: User
}

type Mutation {
    createActiveIssue: Issue
    updateActiveIssue(state: IssueState, name: String, stack: [String!]): Issue
    resetActiveIssue: Issue

    updateUserEstimate(value: String): Issue
    createEstimateActiveIssue(value: String!): Issue
    deleteEstimateActiveIssue(id: ID!): Issue

    createUser: User
}

type Issue {
    _id: ID!
    name: String!
    state: IssueState!
    stack: [String!]!
    estimates: [Estimate!]!
}

enum IssueState {
    COLLECT
    DISCUSS
}

type Estimate {
    _id: ID!
    value: String!
    user: User!
}

type User {
    _id: ID!
    name: String
}
